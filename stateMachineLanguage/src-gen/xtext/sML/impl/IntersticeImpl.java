/**
 * generated by Xtext 2.26.0
 */
package xtext.sML.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xtext.sML.FlattenOrGlobal;
import xtext.sML.Interstice;
import xtext.sML.SMLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Interstice</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.sML.impl.IntersticeImpl#getFg <em>Fg</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IntersticeImpl extends MinimalEObjectImpl.Container implements Interstice
{
  /**
   * The cached value of the '{@link #getFg() <em>Fg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFg()
   * @generated
   * @ordered
   */
  protected FlattenOrGlobal fg;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IntersticeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SMLPackage.Literals.INTERSTICE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FlattenOrGlobal getFg()
  {
    return fg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFg(FlattenOrGlobal newFg, NotificationChain msgs)
  {
    FlattenOrGlobal oldFg = fg;
    fg = newFg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SMLPackage.INTERSTICE__FG, oldFg, newFg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFg(FlattenOrGlobal newFg)
  {
    if (newFg != fg)
    {
      NotificationChain msgs = null;
      if (fg != null)
        msgs = ((InternalEObject)fg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SMLPackage.INTERSTICE__FG, null, msgs);
      if (newFg != null)
        msgs = ((InternalEObject)newFg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SMLPackage.INTERSTICE__FG, null, msgs);
      msgs = basicSetFg(newFg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SMLPackage.INTERSTICE__FG, newFg, newFg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SMLPackage.INTERSTICE__FG:
        return basicSetFg(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SMLPackage.INTERSTICE__FG:
        return getFg();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SMLPackage.INTERSTICE__FG:
        setFg((FlattenOrGlobal)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SMLPackage.INTERSTICE__FG:
        setFg((FlattenOrGlobal)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SMLPackage.INTERSTICE__FG:
        return fg != null;
    }
    return super.eIsSet(featureID);
  }

} //IntersticeImpl
