/**
 * generated by Xtext 2.26.0
 */
package xtext.sML.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import xtext.sML.Merge;
import xtext.sML.MergeBody;
import xtext.sML.SMLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Merge</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.sML.impl.MergeImpl#getDb <em>Db</em>}</li>
 *   <li>{@link xtext.sML.impl.MergeImpl#getMergeBody <em>Merge Body</em>}</li>
 *   <li>{@link xtext.sML.impl.MergeImpl#getFm <em>Fm</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MergeImpl extends MinimalEObjectImpl.Container implements Merge
{
  /**
   * The default value of the '{@link #getDb() <em>Db</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDb()
   * @generated
   * @ordered
   */
  protected static final String DB_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDb() <em>Db</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDb()
   * @generated
   * @ordered
   */
  protected String db = DB_EDEFAULT;

  /**
   * The cached value of the '{@link #getMergeBody() <em>Merge Body</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMergeBody()
   * @generated
   * @ordered
   */
  protected EList<MergeBody> mergeBody;

  /**
   * The default value of the '{@link #getFm() <em>Fm</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFm()
   * @generated
   * @ordered
   */
  protected static final String FM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFm() <em>Fm</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFm()
   * @generated
   * @ordered
   */
  protected String fm = FM_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MergeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SMLPackage.Literals.MERGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDb()
  {
    return db;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDb(String newDb)
  {
    String oldDb = db;
    db = newDb;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SMLPackage.MERGE__DB, oldDb, db));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<MergeBody> getMergeBody()
  {
    if (mergeBody == null)
    {
      mergeBody = new EObjectContainmentEList<MergeBody>(MergeBody.class, this, SMLPackage.MERGE__MERGE_BODY);
    }
    return mergeBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFm()
  {
    return fm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFm(String newFm)
  {
    String oldFm = fm;
    fm = newFm;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SMLPackage.MERGE__FM, oldFm, fm));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SMLPackage.MERGE__MERGE_BODY:
        return ((InternalEList<?>)getMergeBody()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SMLPackage.MERGE__DB:
        return getDb();
      case SMLPackage.MERGE__MERGE_BODY:
        return getMergeBody();
      case SMLPackage.MERGE__FM:
        return getFm();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SMLPackage.MERGE__DB:
        setDb((String)newValue);
        return;
      case SMLPackage.MERGE__MERGE_BODY:
        getMergeBody().clear();
        getMergeBody().addAll((Collection<? extends MergeBody>)newValue);
        return;
      case SMLPackage.MERGE__FM:
        setFm((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SMLPackage.MERGE__DB:
        setDb(DB_EDEFAULT);
        return;
      case SMLPackage.MERGE__MERGE_BODY:
        getMergeBody().clear();
        return;
      case SMLPackage.MERGE__FM:
        setFm(FM_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SMLPackage.MERGE__DB:
        return DB_EDEFAULT == null ? db != null : !DB_EDEFAULT.equals(db);
      case SMLPackage.MERGE__MERGE_BODY:
        return mergeBody != null && !mergeBody.isEmpty();
      case SMLPackage.MERGE__FM:
        return FM_EDEFAULT == null ? fm != null : !FM_EDEFAULT.equals(fm);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (db: ");
    result.append(db);
    result.append(", fm: ");
    result.append(fm);
    result.append(')');
    return result.toString();
  }

} //MergeImpl
