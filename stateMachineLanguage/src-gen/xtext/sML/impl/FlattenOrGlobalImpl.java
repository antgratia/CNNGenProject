/**
 * generated by Xtext 2.26.0
 */
package xtext.sML.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xtext.sML.FlattenOrGlobal;
import xtext.sML.SMLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Flatten Or Global</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.sML.impl.FlattenOrGlobalImpl#getFlat <em>Flat</em>}</li>
 *   <li>{@link xtext.sML.impl.FlattenOrGlobalImpl#getGp <em>Gp</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FlattenOrGlobalImpl extends MinimalEObjectImpl.Container implements FlattenOrGlobal
{
  /**
   * The default value of the '{@link #getFlat() <em>Flat</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFlat()
   * @generated
   * @ordered
   */
  protected static final String FLAT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFlat() <em>Flat</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFlat()
   * @generated
   * @ordered
   */
  protected String flat = FLAT_EDEFAULT;

  /**
   * The default value of the '{@link #getGp() <em>Gp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGp()
   * @generated
   * @ordered
   */
  protected static final String GP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGp() <em>Gp</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGp()
   * @generated
   * @ordered
   */
  protected String gp = GP_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FlattenOrGlobalImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SMLPackage.Literals.FLATTEN_OR_GLOBAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFlat()
  {
    return flat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFlat(String newFlat)
  {
    String oldFlat = flat;
    flat = newFlat;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SMLPackage.FLATTEN_OR_GLOBAL__FLAT, oldFlat, flat));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getGp()
  {
    return gp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGp(String newGp)
  {
    String oldGp = gp;
    gp = newGp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SMLPackage.FLATTEN_OR_GLOBAL__GP, oldGp, gp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SMLPackage.FLATTEN_OR_GLOBAL__FLAT:
        return getFlat();
      case SMLPackage.FLATTEN_OR_GLOBAL__GP:
        return getGp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SMLPackage.FLATTEN_OR_GLOBAL__FLAT:
        setFlat((String)newValue);
        return;
      case SMLPackage.FLATTEN_OR_GLOBAL__GP:
        setGp((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SMLPackage.FLATTEN_OR_GLOBAL__FLAT:
        setFlat(FLAT_EDEFAULT);
        return;
      case SMLPackage.FLATTEN_OR_GLOBAL__GP:
        setGp(GP_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SMLPackage.FLATTEN_OR_GLOBAL__FLAT:
        return FLAT_EDEFAULT == null ? flat != null : !FLAT_EDEFAULT.equals(flat);
      case SMLPackage.FLATTEN_OR_GLOBAL__GP:
        return GP_EDEFAULT == null ? gp != null : !GP_EDEFAULT.equals(gp);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (flat: ");
    result.append(flat);
    result.append(", gp: ");
    result.append(gp);
    result.append(')');
    return result.toString();
  }

} //FlattenOrGlobalImpl
